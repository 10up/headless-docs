"use strict";(self.webpackChunkheadless_doc=self.webpackChunkheadless_doc||[]).push([[9726],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(a),d=r,m=u["".concat(c,".").concat(d)]||u[d]||h[d]||o;return a?n.createElement(m,s(s({ref:t},p),{},{components:a})):n.createElement(m,s({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=a[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6656:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=a(7462),r=(a(7294),a(3905));const o={slug:"/data-fetching/usesearch",sidebar_position:5},s="The useSearch hook",i={unversionedId:"Data Fetching/useSearch",id:"Data Fetching/useSearch",title:"The useSearch hook",description:"The useSearch hook is the Next.js binding for the useFetchSearch.",source:"@site/documentation/02 - Data Fetching/useSearch.md",sourceDirName:"02 - Data Fetching",slug:"/data-fetching/usesearch",permalink:"/docs/data-fetching/usesearch",draft:!1,editUrl:"https://github.com/10up/headless/tree/trunk/site/documentation/02 - Data Fetching/useSearch.md",tags:[],version:"current",lastUpdatedBy:"N\xedcholas Oliveira",lastUpdatedAt:1672846226,formattedLastUpdatedAt:"Jan 4, 2023",sidebarPosition:5,frontMatter:{slug:"/data-fetching/usesearch",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"The useTerms hook",permalink:"/docs/data-fetching/useterms"},next:{title:"Prefetching data on the server",permalink:"/docs/data-fetching/prefetching"}},c={},l=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Category Archive",id:"category-archive",level:2},{value:"QueriedObject",id:"queriedobject",level:2},{value:"Known limitations",id:"known-limitations",level:2}],p={toc:l};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"the-usesearch-hook"},"The useSearch hook"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The ",(0,r.kt)("a",{parentName:"p",href:"/api/modules/10up_headless_next#usesearch"},"useSearch")," hook is the Next.js binding for the ",(0,r.kt)("a",{parentName:"p",href:"/api/namespaces/10up_headless_core.react#usefetchsearch"},"useFetchSearch"),".")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"useSearch")," hook searches for WordPress posts from a registered post type."),(0,r.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,r.kt)("p",null,"Assuming a ",(0,r.kt)("inlineCode",{parentName:"p"},"src/pages/search/[[...path]].js")," route with the following content."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This example is using the optional catch-all route ",(0,r.kt)("inlineCode",{parentName:"p"},"[[..path]].js")," because we want the ",(0,r.kt)("inlineCode",{parentName:"p"},"/search")," route to be handled by the same file and fetch the latest posts.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"//src/pages/search/[[...path]].js\nimport { useSearch } from '@10up/headless-next';\n\nconst ArchivePage = () => {\n    const { loading, error, data } = useSearch({ per_page: 10 });\n\n    if (loading) {\n        return 'Loading...';\n    }\n\n    if (error) {\n        return 'error...';\n    }\n\n    return (\n        <div>\n            {data?.posts?.map((post) => (\n                <h2 key={post.id}>{post.title.rendered}</h2>\n            ))}\n        </div>\n    );\n};\n")),(0,r.kt)("p",null,"The route will automatically render the latest 10 posts if no search term is provided. The following paths are automatically handled:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"/search/search-term"),(0,r.kt)("li",{parentName:"ul"},"/search/search-term/page/2"),(0,r.kt)("li",{parentName:"ul"},"/search")),(0,r.kt)("h2",{id:"category-archive"},"Category Archive"),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"usePosts")," hook to create a category archive route (",(0,r.kt)("inlineCode",{parentName:"p"},"src/pages/category/[...path].js"),")."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"We use ",(0,r.kt)("inlineCode",{parentName:"p"},"[...path].js")," here because ",(0,r.kt)("strong",{parentName:"p"},"we do not want")," the ",(0,r.kt)("inlineCode",{parentName:"p"},"/category")," route to render anything.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// src/pages/category/[...path].js\nimport {\n    usePosts,\n    fetchHookData,\n    addHookData,\n    handleError,\n} from '@10up/headless-next';\n\nconst SearchPage = () => {\n    const { data } = usePosts({ taxonomy: 'category' });\n\n    return (\n        <>\n            <h1>Showing search results for: {data.queriedObject.search.searchedValue}</h1>\n            <ul>\n                {data.posts.map((post) => (\n                    <li key={post.id}>\n                        <Link href={post.link}>{post.title.rendered}</Link>\n                    </li>\n                ))}\n            </ul>\n            <Pagination pageInfo={data.pageInfo} />\n        </>\n    );\n};\n")),(0,r.kt)("h2",{id:"queriedobject"},"QueriedObject"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"useSearch")," hook also exposes a ",(0,r.kt)("inlineCode",{parentName:"p"},"queriedObject"),". See ",(0,r.kt)("a",{parentName:"p",href:"/docs/data-fetching/useposts/#queried-object"},"usePosts docs")," for more info."),(0,r.kt)("p",null,"The queried object for for this hook is an object of type ",(0,r.kt)("a",{parentName:"p",href:"/api/interfaces/10up_headless_core.SearchEntity/"},"SearchEnrity"),"."),(0,r.kt)("h2",{id:"known-limitations"},"Known limitations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"It is not possible to fetch posts from more than one post type.")))}u.isMDXComponent=!0}}]);